// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.2 effective-5.10 (swiftlang-6.0.2.1.2 clang-1600.0.26.4)
// swift-module-flags: -target x86_64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name PrebidMobileMAXAdapters
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import AppLovinSDK
import Foundation
import PrebidMobile
@_exported import PrebidMobileMAXAdapters
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc @objcMembers public class MAXMediationNativeUtils : ObjectiveC.NSObject, PrebidMobile.PrebidMediationDelegate {
  @objc public var nativeAdLoader: AppLovinSDK.MANativeAdLoader
  @objc public init(nativeAdLoader: AppLovinSDK.MANativeAdLoader)
  @objc public func setUpAdObject(with values: [Swift.String : Any]) -> Swift.Bool
  @objc public func cleanUpAdObject()
  @objc public func getAdView() -> UIKit.UIView?
  @objc deinit
}
extension PrebidMobileMAXAdapters.PrebidMAXMediationAdapter : AppLovinSDK.MAInterstitialAdapter, AppLovinSDK.MARewardedAdapter, PrebidMobile.InterstitialControllerLoadingDelegate, PrebidMobile.InterstitialControllerInteractionDelegate {
  @objc dynamic public func loadInterstitialAd(for parameters: any AppLovinSDK.MAAdapterResponseParameters, andNotify delegate: any AppLovinSDK.MAInterstitialAdapterDelegate)
  @objc dynamic public func showInterstitialAd(for parameters: any AppLovinSDK.MAAdapterResponseParameters, andNotify delegate: any AppLovinSDK.MAInterstitialAdapterDelegate)
  @objc dynamic public func loadRewardedAd(for parameters: any AppLovinSDK.MAAdapterResponseParameters, andNotify delegate: any AppLovinSDK.MARewardedAdapterDelegate)
  @objc dynamic public func showRewardedAd(for parameters: any AppLovinSDK.MAAdapterResponseParameters, andNotify delegate: any AppLovinSDK.MARewardedAdapterDelegate)
  @objc dynamic public func interstitialControllerDidLoadAd(_ interstitialController: any PrebidMobile.PrebidMobileInterstitialControllerProtocol)
  @objc dynamic public func interstitialController(_ interstitialController: any PrebidMobile.PrebidMobileInterstitialControllerProtocol, didFailWithError error: any Swift.Error)
  @objc dynamic public func interstitialControllerDidClickAd(_ interstitialController: any PrebidMobile.PrebidMobileInterstitialControllerProtocol)
  @objc dynamic public func interstitialControllerDidCloseAd(_ interstitialController: any PrebidMobile.PrebidMobileInterstitialControllerProtocol)
  @objc dynamic public func interstitialControllerDidDisplay(_ interstitialController: any PrebidMobile.PrebidMobileInterstitialControllerProtocol)
  @objc dynamic public func interstitialControllerDidComplete(_ interstitialController: any PrebidMobile.PrebidMobileInterstitialControllerProtocol)
  @objc dynamic public func viewControllerForModalPresentation(fromInterstitialController: any PrebidMobile.PrebidMobileInterstitialControllerProtocol) -> UIKit.UIViewController?
  @objc dynamic public func trackImpression(forInterstitialController: any PrebidMobile.PrebidMobileInterstitialControllerProtocol)
  @objc dynamic public func interstitialControllerDidLeaveApp(_ interstitialController: any PrebidMobile.PrebidMobileInterstitialControllerProtocol)
}
public let MAXCustomParametersKey: Swift.String
@_inheritsConvenienceInitializers @objc(PrebidMAXMediationAdapter) public class PrebidMAXMediationAdapter : AppLovinSDK.ALMediationAdapter {
  weak public var bannerDelegate: (any AppLovinSDK.MAAdViewAdapterDelegate)?
  public var displayView: PrebidMobile.PBMDisplayView?
  weak public var interstitialDelegate: (any AppLovinSDK.MAInterstitialAdapterDelegate)?
  public var interstitialController: PrebidMobile.InterstitialController?
  public var interstitialAdAvailable: Swift.Bool
  weak public var rewardedDelegate: (any AppLovinSDK.MARewardedAdapterDelegate)?
  weak public var nativeDelegate: (any AppLovinSDK.MANativeAdAdapterDelegate)?
  @objc override dynamic public func initialize(with parameters: any AppLovinSDK.MAAdapterInitializationParameters, completionHandler: @escaping (AppLovinSDK.MAAdapterInitializationStatus, Swift.String?) -> Swift.Void)
  @objc override dynamic public var sdkVersion: Swift.String {
    @objc get
  }
  @objc override dynamic public var adapterVersion: Swift.String {
    @objc get
  }
  @objc override dynamic public func destroy()
  @objc override dynamic public init(sdk: AppLovinSDK.ALSdk)
  @objc deinit
}
@objc @objcMembers public class MAXMediationInterstitialUtils : ObjectiveC.NSObject, PrebidMobile.PrebidMediationDelegate {
  @objc public var interstitialAd: AppLovinSDK.MAInterstitialAd
  @objc public init(interstitialAd: AppLovinSDK.MAInterstitialAd)
  @objc public func setUpAdObject(with values: [Swift.String : Any]) -> Swift.Bool
  @objc public func cleanUpAdObject()
  @objc public func getAdView() -> UIKit.UIView?
  @objc deinit
}
@objc @objcMembers public class PrebidMAUnifiedNativeAd : AppLovinSDK.MANativeAd {
  @objc public var nativeAd: PrebidMobile.NativeAd
  @objc public init(nativeAd: PrebidMobile.NativeAd)
  @objc override dynamic public func prepare(forInteractionClickableViews clickableViews: [UIKit.UIView], withContainer container: UIKit.UIView) -> Swift.Bool
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class MAXConstants : ObjectiveC.NSObject {
  @objc public static let PrebidMAXAdapterVersion: Swift.String
  @objc override dynamic public init()
  @objc deinit
}
extension PrebidMobileMAXAdapters.PrebidMAXMediationAdapter : AppLovinSDK.MANativeAdAdapter, PrebidMobile.NativeAdEventDelegate {
  @objc dynamic public func loadNativeAd(for parameters: any AppLovinSDK.MAAdapterResponseParameters, andNotify delegate: any AppLovinSDK.MANativeAdAdapterDelegate)
  @objc dynamic public func adDidExpire(ad: PrebidMobile.NativeAd)
  @objc dynamic public func adWasClicked(ad: PrebidMobile.NativeAd)
  @objc dynamic public func adDidLogImpression(ad: PrebidMobile.NativeAd)
}
@objc @objcMembers public class MAXMediationBannerUtils : ObjectiveC.NSObject, PrebidMobile.PrebidMediationDelegate {
  @objc public var adView: AppLovinSDK.MAAdView
  @objc public init(adView: AppLovinSDK.MAAdView)
  @objc public func setUpAdObject(with values: [Swift.String : Any]) -> Swift.Bool
  @objc public func cleanUpAdObject()
  @objc public func getAdView() -> UIKit.UIView?
  @objc deinit
}
extension PrebidMobileMAXAdapters.PrebidMAXMediationAdapter : AppLovinSDK.MAAdViewAdapter, PrebidMobile.DisplayViewLoadingDelegate, PrebidMobile.DisplayViewInteractionDelegate {
  @objc dynamic public func loadAdViewAd(for parameters: any AppLovinSDK.MAAdapterResponseParameters, adFormat: AppLovinSDK.MAAdFormat, andNotify delegate: any AppLovinSDK.MAAdViewAdapterDelegate)
  @objc dynamic public func displayViewDidLoadAd(_ displayView: UIKit.UIView)
  @objc dynamic public func displayView(_ displayView: UIKit.UIView, didFailWithError error: any Swift.Error)
  @objc dynamic public func viewControllerForModalPresentation(fromDisplayView: UIKit.UIView) -> UIKit.UIViewController?
  @objc dynamic public func willPresentModal(from displayView: UIKit.UIView)
  @objc dynamic public func didDismissModal(from displayView: UIKit.UIView)
  @objc dynamic public func trackImpression(forDisplayView: UIKit.UIView)
  @objc dynamic public func didLeaveApp(from displayView: UIKit.UIView)
}
@objc @objcMembers public class MAXMediationRewardedUtils : ObjectiveC.NSObject, PrebidMobile.PrebidMediationDelegate {
  @objc public var rewardedAd: AppLovinSDK.MARewardedAd
  @objc public init(rewardedAd: AppLovinSDK.MARewardedAd)
  @objc public func setUpAdObject(with values: [Swift.String : Any]) -> Swift.Bool
  @objc public func cleanUpAdObject()
  @objc public func getAdView() -> UIKit.UIView?
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class MAXUtils : ObjectiveC.NSObject {
  public static func findNative(_ extras: [Swift.AnyHashable : Any]) -> Swift.Result<PrebidMobileMAXAdapters.PrebidMAUnifiedNativeAd, any Swift.Error>
  @objc override dynamic public init()
  @objc deinit
}
